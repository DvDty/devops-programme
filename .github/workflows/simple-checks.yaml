name: ci

on:
  push:
    branches: ['github-actions-practice']

jobs:
  editorconfig:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: check if editorconfig exists
        if: ${{ hashFiles('.editorconfig') == '' }}
        run: exit 'editorconfig does not exist.'

      - name: Add checker
        uses: editorconfig-checker/action-editorconfig-checker@main

      - name: Run checker
        run: editorconfig-checker
#
#  pylint:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - name: Run Python linter - pylint
#        uses: cclauss/GitHub-Action-for-pylint@0.7.0
#
#  black:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - name: Run Python linter - black
#        uses: psf/black@stable
#
#  markdown:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - name: Run markdown linter
#        uses: nosborn/github-action-markdown-cli@v3.3.0
#        with:
#          files: README.md
#
#  tests:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - uses: actions/setup-python@v4
#        with:
#          python-version: 3.12
#
#      - name: Install dependencies
#        working-directory: ./app
#        run: python -m pip install -r requirements.txt
#
#      - name: Run tests
#        working-directory: ./app
#        run: python -m unittest app_test.py
#
#  security:
#    name: gitleaks
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - uses: gitleaks/gitleaks-action@v2
#        env:
#          GITHUB_TOKEN: ${{ github.token }}
#
#  code-smells:
#    name: SonarCloud
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - uses: AppThreat/sast-scan-action@master
#        with:
#          type: "python"
#
#  review-security-issues:
#    name: Snyk
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - uses: snyk/actions/python-3.10@master
#        env:
#          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
#        with:
#          args: --severity-threshold=critical

  build-image:
    runs-on: ubuntu-latest
#    needs: [editorconfig, pylint, black, markdown, tests, security, code-smells, review-security-issues]
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and export to Docker
        uses: docker/build-push-action@v5
        id: build
        with:
          context: .
          load: true
          tags: ${{ github.sha }}

      - name: test
        run: |
          echo ${{ steps.build.outputs.imageid }}
          echo ${{ steps.build.outputs.0 }}
#      - name: Scan image
#        uses: aquasecurity/trivy-action@master
#        with:
#          image-ref: 'dvdty/github-actions-practice:${{ github.sha }}'
#          format: 'table'
#          exit-code: '1'
#          ignore-unfixed: true
#          vuln-type: 'os,library'
#          severity: 'CRITICAL'


#  build-and-push:
#    runs-on: ubuntu-latest
#    needs: [editorconfig, pylint, black, markdown, tests, security, code-smells, review-security-issues]
#    steps:
#      - name: QEMU
#        uses: docker/setup-qemu-action@v3
#
#      - name: Buildx
#        uses: docker/setup-buildx-action@v3
#
#      - name: Login
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#      - name: Build and push
#        uses: docker/build-push-action@v5
#        with:
#          push: true
#          tags: dvdty/github-actions-practice:${{ github.sha }}
#
#      - name: Run Trivy vulnerability scanner
#        uses: aquasecurity/trivy-action@master
#        with:
#          image-ref: 'dvdty/github-actions-practice:${{ github.sha }}'
#          format: 'table'
#          exit-code: '1'
#          ignore-unfixed: true
#          vuln-type: 'os,library'
#          severity: 'CRITICAL'
